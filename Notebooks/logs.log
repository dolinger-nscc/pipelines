2023-03-22 18:21:48,382:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-22 18:21:48,382:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-22 18:21:48,382:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-22 18:21:48,382:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-22 18:21:49,059:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-03-22 18:21:49,989:INFO:PyCaret ClassificationExperiment
2023-03-22 18:21:49,990:INFO:Logging name: clf-default-name
2023-03-22 18:21:49,990:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-03-22 18:21:49,990:INFO:version 3.0.0
2023-03-22 18:21:49,990:INFO:Initializing setup()
2023-03-22 18:21:49,990:INFO:self.USI: 7176
2023-03-22 18:21:49,990:INFO:self._variable_keys: {'target_param', 'data', 'gpu_param', 'USI', 'logging_param', 'gpu_n_jobs_param', '_available_plots', 'exp_id', 'X_test', 'seed', 'idx', 'n_jobs_param', 'y_train', 'y', 'html_param', 'fold_groups_param', 'exp_name_log', 'pipeline', 'X', 'fold_shuffle_param', 'fix_imbalance', '_ml_usecase', 'is_multiclass', 'y_test', 'memory', 'log_plots_param', 'fold_generator', 'X_train'}
2023-03-22 18:21:49,990:INFO:Checking environment
2023-03-22 18:21:49,990:INFO:python_version: 3.10.9
2023-03-22 18:21:49,990:INFO:python_build: ('main', 'Mar  8 2023 10:42:25')
2023-03-22 18:21:49,990:INFO:machine: AMD64
2023-03-22 18:21:49,990:INFO:platform: Windows-10-10.0.22621-SP0
2023-03-22 18:21:49,994:INFO:Memory: svmem(total=34264330240, available=24007880704, percent=29.9, used=10256449536, free=24007880704)
2023-03-22 18:21:49,994:INFO:Physical Core: 8
2023-03-22 18:21:49,994:INFO:Logical Core: 16
2023-03-22 18:21:49,994:INFO:Checking libraries
2023-03-22 18:21:49,994:INFO:System:
2023-03-22 18:21:49,994:INFO:    python: 3.10.9 | packaged by Anaconda, Inc. | (main, Mar  8 2023, 10:42:25) [MSC v.1916 64 bit (AMD64)]
2023-03-22 18:21:49,994:INFO:executable: C:\Users\dolin\miniconda3\envs\pc3\python.exe
2023-03-22 18:21:49,994:INFO:   machine: Windows-10-10.0.22621-SP0
2023-03-22 18:21:49,994:INFO:PyCaret required dependencies:
2023-03-22 18:21:49,995:INFO:                 pip: 23.0.1
2023-03-22 18:21:49,995:INFO:          setuptools: 60.10.0
2023-03-22 18:21:49,995:INFO:             pycaret: 3.0.0
2023-03-22 18:21:49,995:INFO:             IPython: 7.34.0
2023-03-22 18:21:49,995:INFO:          ipywidgets: 7.7.3
2023-03-22 18:21:49,995:INFO:                tqdm: 4.64.1
2023-03-22 18:21:49,995:INFO:               numpy: 1.23.5
2023-03-22 18:21:49,995:INFO:              pandas: 1.5.3
2023-03-22 18:21:49,995:INFO:              jinja2: 3.1.2
2023-03-22 18:21:49,995:INFO:               scipy: 1.9.3
2023-03-22 18:21:49,995:INFO:              joblib: 1.2.0
2023-03-22 18:21:49,995:INFO:             sklearn: 1.2.2
2023-03-22 18:21:49,995:INFO:                pyod: 1.0.9
2023-03-22 18:21:49,995:INFO:            imblearn: 0.10.1
2023-03-22 18:21:49,995:INFO:   category_encoders: 2.6.0
2023-03-22 18:21:49,995:INFO:            lightgbm: 3.3.5
2023-03-22 18:21:49,995:INFO:               numba: 0.56.4
2023-03-22 18:21:49,995:INFO:            requests: 2.28.2
2023-03-22 18:21:49,995:INFO:          matplotlib: 3.6.3
2023-03-22 18:21:49,995:INFO:          scikitplot: 0.3.7
2023-03-22 18:21:49,995:INFO:         yellowbrick: 1.5
2023-03-22 18:21:49,995:INFO:              plotly: 5.13.1
2023-03-22 18:21:49,996:INFO:             kaleido: 0.2.1
2023-03-22 18:21:49,996:INFO:         statsmodels: 0.13.5
2023-03-22 18:21:49,996:INFO:              sktime: 0.16.1
2023-03-22 18:21:49,996:INFO:               tbats: 1.1.2
2023-03-22 18:21:49,996:INFO:            pmdarima: 2.0.3
2023-03-22 18:21:49,996:INFO:              psutil: 5.9.4
2023-03-22 18:21:49,996:INFO:PyCaret optional dependencies:
2023-03-22 18:21:50,663:INFO:                shap: 0.41.0
2023-03-22 18:21:50,663:INFO:           interpret: 0.3.2
2023-03-22 18:21:50,663:INFO:                umap: 0.5.3
2023-03-22 18:21:50,663:INFO:    pandas_profiling: 4.1.1
2023-03-22 18:21:50,663:INFO:  explainerdashboard: 0.4.2.1
2023-03-22 18:21:50,663:INFO:             autoviz: 0.1.58
2023-03-22 18:21:50,663:INFO:           fairlearn: 0.7.0
2023-03-22 18:21:50,663:INFO:             xgboost: 1.7.4
2023-03-22 18:21:50,663:INFO:            catboost: 1.1.1
2023-03-22 18:21:50,663:INFO:              kmodes: 0.12.2
2023-03-22 18:21:50,663:INFO:             mlxtend: 0.21.0
2023-03-22 18:21:50,663:INFO:       statsforecast: 1.5.0
2023-03-22 18:21:50,663:INFO:        tune_sklearn: 0.4.5
2023-03-22 18:21:50,663:INFO:                 ray: 2.3.0
2023-03-22 18:21:50,663:INFO:            hyperopt: 0.2.7
2023-03-22 18:21:50,663:INFO:              optuna: 3.1.0
2023-03-22 18:21:50,663:INFO:               skopt: 0.9.0
2023-03-22 18:21:50,663:INFO:              mlflow: 1.30.0
2023-03-22 18:21:50,663:INFO:              gradio: 3.22.1
2023-03-22 18:21:50,663:INFO:             fastapi: 0.95.0
2023-03-22 18:21:50,663:INFO:             uvicorn: 0.21.1
2023-03-22 18:21:50,663:INFO:              m2cgen: 0.10.0
2023-03-22 18:21:50,663:INFO:           evidently: 0.2.6
2023-03-22 18:21:50,663:INFO:               fugue: 0.8.1
2023-03-22 18:21:50,663:INFO:           streamlit: Not installed
2023-03-22 18:21:50,663:INFO:             prophet: Not installed
2023-03-22 18:21:50,663:INFO:None
2023-03-22 18:21:50,663:INFO:Set up data.
2023-03-22 18:21:50,669:INFO:Set up train/test split.
2023-03-22 18:21:50,671:INFO:Set up index.
2023-03-22 18:21:50,671:INFO:Set up folding strategy.
2023-03-22 18:21:50,671:INFO:Assigning column types.
2023-03-22 18:21:50,675:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-03-22 18:21:50,723:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-03-22 18:21:50,725:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-03-22 18:21:50,760:INFO:Soft dependency imported: xgboost: 1.7.4
2023-03-22 18:21:50,997:INFO:Soft dependency imported: catboost: 1.1.1
2023-03-22 18:21:51,180:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-03-22 18:21:51,182:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-03-22 18:21:51,210:INFO:Soft dependency imported: xgboost: 1.7.4
2023-03-22 18:21:51,214:INFO:Soft dependency imported: catboost: 1.1.1
2023-03-22 18:21:51,214:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-03-22 18:21:51,262:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-03-22 18:21:51,290:INFO:Soft dependency imported: xgboost: 1.7.4
2023-03-22 18:21:51,294:INFO:Soft dependency imported: catboost: 1.1.1
2023-03-22 18:21:51,340:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-03-22 18:21:51,370:INFO:Soft dependency imported: xgboost: 1.7.4
2023-03-22 18:21:51,372:INFO:Soft dependency imported: catboost: 1.1.1
2023-03-22 18:21:51,374:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-03-22 18:21:51,450:INFO:Soft dependency imported: xgboost: 1.7.4
2023-03-22 18:21:51,452:INFO:Soft dependency imported: catboost: 1.1.1
2023-03-22 18:21:51,530:INFO:Soft dependency imported: xgboost: 1.7.4
2023-03-22 18:21:51,532:INFO:Soft dependency imported: catboost: 1.1.1
2023-03-22 18:21:51,534:INFO:Preparing preprocessing pipeline...
2023-03-22 18:21:51,536:INFO:Set up label encoding.
2023-03-22 18:21:51,536:INFO:Set up simple imputation.
2023-03-22 18:21:51,538:INFO:Set up encoding of ordinal features.
2023-03-22 18:21:51,538:INFO:Set up encoding of categorical features.
2023-03-22 18:21:51,604:INFO:Finished creating preprocessing pipeline.
2023-03-22 18:21:51,621:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\dolin\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['bill_length_mm', 'bill_depth_mm',
                                             'flipper_length_mm',
                                             'body_mass_g'],
                                    transformer=SimpleImputer(add_in...
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': Female    0
Male      1
NaN      -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None, include=['island'],
                                    transformer=OneHotEncoder(cols=['island'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2023-03-22 18:21:51,622:INFO:Creating final display dataframe.
2023-03-22 18:21:51,805:INFO:Setup _display_container:                     Description                               Value
0                    Session id                                  42
1                        Target                             species
2                   Target type                          Multiclass
3                Target mapping  Adelie: 0, Chinstrap: 1, Gentoo: 2
4           Original data shape                            (293, 7)
5        Transformed data shape                            (293, 9)
6   Transformed train set shape                            (205, 9)
7    Transformed test set shape                             (88, 9)
8              Ordinal features                                   1
9              Numeric features                                   4
10         Categorical features                                   2
11                   Preprocess                                True
12              Imputation type                              simple
13           Numeric imputation                                mean
14       Categorical imputation                                mode
15     Maximum one-hot encoding                                  25
16              Encoding method                                None
17               Fold Generator                     StratifiedKFold
18                  Fold Number                                  10
19                     CPU Jobs                                  -1
20                      Use GPU                               False
21               Log Experiment                               False
22              Experiment Name                    clf-default-name
23                          USI                                7176
2023-03-22 18:21:51,888:INFO:Soft dependency imported: xgboost: 1.7.4
2023-03-22 18:21:51,891:INFO:Soft dependency imported: catboost: 1.1.1
2023-03-22 18:21:51,969:INFO:Soft dependency imported: xgboost: 1.7.4
2023-03-22 18:21:51,971:INFO:Soft dependency imported: catboost: 1.1.1
2023-03-22 18:21:51,971:INFO:setup() successfully completed in 2.16s...............
2023-03-22 18:22:07,701:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-22 18:22:07,701:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-22 18:22:07,701:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-22 18:22:07,702:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-22 18:22:08,332:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-03-22 18:22:09,166:INFO:PyCaret ClassificationExperiment
2023-03-22 18:22:09,166:INFO:Logging name: clf-default-name
2023-03-22 18:22:09,166:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-03-22 18:22:09,166:INFO:version 3.0.0
2023-03-22 18:22:09,166:INFO:Initializing setup()
2023-03-22 18:22:09,166:INFO:self.USI: aea6
2023-03-22 18:22:09,166:INFO:self._variable_keys: {'y', 'USI', 'target_param', 'fold_groups_param', 'data', 'is_multiclass', 'gpu_n_jobs_param', 'fold_shuffle_param', 'html_param', 'seed', 'exp_id', 'fold_generator', 'X', 'X_train', 'log_plots_param', '_available_plots', 'n_jobs_param', 'logging_param', 'y_train', 'gpu_param', '_ml_usecase', 'X_test', 'fix_imbalance', 'exp_name_log', 'pipeline', 'idx', 'memory', 'y_test'}
2023-03-22 18:22:09,166:INFO:Checking environment
2023-03-22 18:22:09,166:INFO:python_version: 3.10.9
2023-03-22 18:22:09,166:INFO:python_build: ('main', 'Mar  8 2023 10:42:25')
2023-03-22 18:22:09,166:INFO:machine: AMD64
2023-03-22 18:22:09,166:INFO:platform: Windows-10-10.0.22621-SP0
2023-03-22 18:22:09,170:INFO:Memory: svmem(total=34264330240, available=24070053888, percent=29.8, used=10194276352, free=24070053888)
2023-03-22 18:22:09,170:INFO:Physical Core: 8
2023-03-22 18:22:09,170:INFO:Logical Core: 16
2023-03-22 18:22:09,170:INFO:Checking libraries
2023-03-22 18:22:09,170:INFO:System:
2023-03-22 18:22:09,170:INFO:    python: 3.10.9 | packaged by Anaconda, Inc. | (main, Mar  8 2023, 10:42:25) [MSC v.1916 64 bit (AMD64)]
2023-03-22 18:22:09,170:INFO:executable: C:\Users\dolin\miniconda3\envs\pc3\python.exe
2023-03-22 18:22:09,170:INFO:   machine: Windows-10-10.0.22621-SP0
2023-03-22 18:22:09,170:INFO:PyCaret required dependencies:
2023-03-22 18:22:09,171:INFO:                 pip: 23.0.1
2023-03-22 18:22:09,171:INFO:          setuptools: 60.10.0
2023-03-22 18:22:09,171:INFO:             pycaret: 3.0.0
2023-03-22 18:22:09,171:INFO:             IPython: 7.34.0
2023-03-22 18:22:09,171:INFO:          ipywidgets: 7.7.3
2023-03-22 18:22:09,171:INFO:                tqdm: 4.64.1
2023-03-22 18:22:09,171:INFO:               numpy: 1.23.5
2023-03-22 18:22:09,171:INFO:              pandas: 1.5.3
2023-03-22 18:22:09,171:INFO:              jinja2: 3.1.2
2023-03-22 18:22:09,171:INFO:               scipy: 1.9.3
2023-03-22 18:22:09,171:INFO:              joblib: 1.2.0
2023-03-22 18:22:09,171:INFO:             sklearn: 1.2.2
2023-03-22 18:22:09,171:INFO:                pyod: 1.0.9
2023-03-22 18:22:09,171:INFO:            imblearn: 0.10.1
2023-03-22 18:22:09,171:INFO:   category_encoders: 2.6.0
2023-03-22 18:22:09,171:INFO:            lightgbm: 3.3.5
2023-03-22 18:22:09,171:INFO:               numba: 0.56.4
2023-03-22 18:22:09,171:INFO:            requests: 2.28.2
2023-03-22 18:22:09,171:INFO:          matplotlib: 3.6.3
2023-03-22 18:22:09,171:INFO:          scikitplot: 0.3.7
2023-03-22 18:22:09,171:INFO:         yellowbrick: 1.5
2023-03-22 18:22:09,171:INFO:              plotly: 5.13.1
2023-03-22 18:22:09,171:INFO:             kaleido: 0.2.1
2023-03-22 18:22:09,172:INFO:         statsmodels: 0.13.5
2023-03-22 18:22:09,172:INFO:              sktime: 0.16.1
2023-03-22 18:22:09,172:INFO:               tbats: 1.1.2
2023-03-22 18:22:09,172:INFO:            pmdarima: 2.0.3
2023-03-22 18:22:09,172:INFO:              psutil: 5.9.4
2023-03-22 18:22:09,172:INFO:PyCaret optional dependencies:
2023-03-22 18:22:09,788:INFO:                shap: 0.41.0
2023-03-22 18:22:09,788:INFO:           interpret: 0.3.2
2023-03-22 18:22:09,788:INFO:                umap: 0.5.3
2023-03-22 18:22:09,788:INFO:    pandas_profiling: 4.1.1
2023-03-22 18:22:09,788:INFO:  explainerdashboard: 0.4.2.1
2023-03-22 18:22:09,788:INFO:             autoviz: 0.1.58
2023-03-22 18:22:09,788:INFO:           fairlearn: 0.7.0
2023-03-22 18:22:09,788:INFO:             xgboost: 1.7.4
2023-03-22 18:22:09,788:INFO:            catboost: 1.1.1
2023-03-22 18:22:09,788:INFO:              kmodes: 0.12.2
2023-03-22 18:22:09,788:INFO:             mlxtend: 0.21.0
2023-03-22 18:22:09,788:INFO:       statsforecast: 1.5.0
2023-03-22 18:22:09,788:INFO:        tune_sklearn: 0.4.5
2023-03-22 18:22:09,788:INFO:                 ray: 2.3.0
2023-03-22 18:22:09,788:INFO:            hyperopt: 0.2.7
2023-03-22 18:22:09,788:INFO:              optuna: 3.1.0
2023-03-22 18:22:09,788:INFO:               skopt: 0.9.0
2023-03-22 18:22:09,788:INFO:              mlflow: 1.30.0
2023-03-22 18:22:09,788:INFO:              gradio: 3.22.1
2023-03-22 18:22:09,788:INFO:             fastapi: 0.95.0
2023-03-22 18:22:09,788:INFO:             uvicorn: 0.21.1
2023-03-22 18:22:09,788:INFO:              m2cgen: 0.10.0
2023-03-22 18:22:09,788:INFO:           evidently: 0.2.6
2023-03-22 18:22:09,788:INFO:               fugue: 0.8.1
2023-03-22 18:22:09,788:INFO:           streamlit: Not installed
2023-03-22 18:22:09,788:INFO:             prophet: Not installed
2023-03-22 18:22:09,788:INFO:None
2023-03-22 18:22:09,790:INFO:Set up data.
2023-03-22 18:22:09,794:INFO:Set up train/test split.
2023-03-22 18:22:09,796:INFO:Set up index.
2023-03-22 18:22:09,799:INFO:Set up folding strategy.
2023-03-22 18:22:09,799:INFO:Assigning column types.
2023-03-22 18:22:09,801:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-03-22 18:22:09,847:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-03-22 18:22:09,851:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-03-22 18:22:09,883:INFO:Soft dependency imported: xgboost: 1.7.4
2023-03-22 18:22:10,093:INFO:Soft dependency imported: catboost: 1.1.1
2023-03-22 18:22:10,284:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-03-22 18:22:10,284:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-03-22 18:22:10,320:INFO:Soft dependency imported: xgboost: 1.7.4
2023-03-22 18:22:10,324:INFO:Soft dependency imported: catboost: 1.1.1
2023-03-22 18:22:10,324:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-03-22 18:22:10,384:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-03-22 18:22:10,420:INFO:Soft dependency imported: xgboost: 1.7.4
2023-03-22 18:22:10,422:INFO:Soft dependency imported: catboost: 1.1.1
2023-03-22 18:22:10,482:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-03-22 18:22:10,518:INFO:Soft dependency imported: xgboost: 1.7.4
2023-03-22 18:22:10,522:INFO:Soft dependency imported: catboost: 1.1.1
2023-03-22 18:22:10,522:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-03-22 18:22:10,619:INFO:Soft dependency imported: xgboost: 1.7.4
2023-03-22 18:22:10,621:INFO:Soft dependency imported: catboost: 1.1.1
2023-03-22 18:22:10,717:INFO:Soft dependency imported: xgboost: 1.7.4
2023-03-22 18:22:10,721:INFO:Soft dependency imported: catboost: 1.1.1
2023-03-22 18:22:10,723:INFO:Preparing preprocessing pipeline...
2023-03-22 18:22:10,723:INFO:Set up label encoding.
2023-03-22 18:22:10,723:INFO:Set up simple imputation.
2023-03-22 18:22:10,725:INFO:Set up encoding of ordinal features.
2023-03-22 18:22:10,727:INFO:Set up encoding of categorical features.
2023-03-22 18:22:10,792:INFO:Finished creating preprocessing pipeline.
2023-03-22 18:22:10,808:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\dolin\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['bill_length_mm', 'bill_depth_mm',
                                             'flipper_length_mm',
                                             'body_mass_g'],
                                    transformer=SimpleImputer(add_in...
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': Female    0
Male      1
NaN      -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None, include=['island'],
                                    transformer=OneHotEncoder(cols=['island'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2023-03-22 18:22:10,808:INFO:Creating final display dataframe.
2023-03-22 18:22:10,988:INFO:Setup _display_container:                     Description                               Value
0                    Session id                                  42
1                        Target                             species
2                   Target type                          Multiclass
3                Target mapping  Adelie: 0, Chinstrap: 1, Gentoo: 2
4           Original data shape                            (313, 7)
5        Transformed data shape                            (313, 9)
6   Transformed train set shape                            (219, 9)
7    Transformed test set shape                             (94, 9)
8              Ordinal features                                   1
9              Numeric features                                   4
10         Categorical features                                   2
11                   Preprocess                                True
12              Imputation type                              simple
13           Numeric imputation                                mean
14       Categorical imputation                                mode
15     Maximum one-hot encoding                                  25
16              Encoding method                                None
17               Fold Generator                     StratifiedKFold
18                  Fold Number                                  10
19                     CPU Jobs                                  -1
20                      Use GPU                               False
21               Log Experiment                               False
22              Experiment Name                    clf-default-name
23                          USI                                aea6
2023-03-22 18:22:11,091:INFO:Soft dependency imported: xgboost: 1.7.4
2023-03-22 18:22:11,093:INFO:Soft dependency imported: catboost: 1.1.1
2023-03-22 18:22:11,189:INFO:Soft dependency imported: xgboost: 1.7.4
2023-03-22 18:22:11,193:INFO:Soft dependency imported: catboost: 1.1.1
2023-03-22 18:22:11,193:INFO:setup() successfully completed in 2.18s...............
2023-03-22 18:22:39,184:INFO:Soft dependency imported: autoviz: 0.1.58
2023-03-22 18:23:01,033:INFO:Initializing compare_models()
2023-03-22 18:23:01,033:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028C79C80760>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000028C79C80760>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-03-22 18:23:01,033:INFO:Checking exceptions
2023-03-22 18:23:01,036:INFO:Preparing display monitor
2023-03-22 18:23:01,060:INFO:Initializing Logistic Regression
2023-03-22 18:23:01,060:INFO:Total runtime is 0.0 minutes
2023-03-22 18:23:01,063:INFO:SubProcess create_model() called ==================================
2023-03-22 18:23:01,063:INFO:Initializing create_model()
2023-03-22 18:23:01,063:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028C79C80760>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028C51216BF0>, model_only=True, return_train_score=False, kwargs={})
2023-03-22 18:23:01,063:INFO:Checking exceptions
2023-03-22 18:23:01,064:INFO:Importing libraries
2023-03-22 18:23:01,064:INFO:Copying training dataset
2023-03-22 18:23:01,067:INFO:Defining folds
2023-03-22 18:23:01,067:INFO:Declaring metric variables
2023-03-22 18:23:01,070:INFO:Importing untrained model
2023-03-22 18:23:01,073:INFO:Logistic Regression Imported successfully
2023-03-22 18:23:01,080:INFO:Starting cross validation
2023-03-22 18:23:01,082:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-22 18:23:05,445:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:05,447:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:05,449:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:05,509:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:05,511:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:05,513:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:05,553:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:05,555:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:05,555:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:05,557:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:05,557:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:05,557:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:05,559:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:05,561:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:05,563:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:05,581:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:05,583:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:05,583:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:05,601:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:05,601:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:05,603:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:05,605:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:05,605:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:05,607:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:05,617:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:05,619:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:05,621:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:05,635:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:05,637:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:05,639:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:06,921:INFO:Calculating mean and std
2023-03-22 18:23:06,923:INFO:Creating metrics dataframe
2023-03-22 18:23:07,114:INFO:Uploading results into container
2023-03-22 18:23:07,114:INFO:Uploading model into container now
2023-03-22 18:23:07,114:INFO:_master_model_container: 1
2023-03-22 18:23:07,114:INFO:_display_container: 2
2023-03-22 18:23:07,116:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-03-22 18:23:07,116:INFO:create_model() successfully completed......................................
2023-03-22 18:23:07,317:INFO:SubProcess create_model() end ==================================
2023-03-22 18:23:07,317:INFO:Creating metrics dataframe
2023-03-22 18:23:07,325:INFO:Initializing K Neighbors Classifier
2023-03-22 18:23:07,325:INFO:Total runtime is 0.10441666046778361 minutes
2023-03-22 18:23:07,329:INFO:SubProcess create_model() called ==================================
2023-03-22 18:23:07,329:INFO:Initializing create_model()
2023-03-22 18:23:07,329:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028C79C80760>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028C51216BF0>, model_only=True, return_train_score=False, kwargs={})
2023-03-22 18:23:07,329:INFO:Checking exceptions
2023-03-22 18:23:07,329:INFO:Importing libraries
2023-03-22 18:23:07,329:INFO:Copying training dataset
2023-03-22 18:23:07,333:INFO:Defining folds
2023-03-22 18:23:07,333:INFO:Declaring metric variables
2023-03-22 18:23:07,336:INFO:Importing untrained model
2023-03-22 18:23:07,339:INFO:K Neighbors Classifier Imported successfully
2023-03-22 18:23:07,346:INFO:Starting cross validation
2023-03-22 18:23:07,348:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-22 18:23:07,634:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:07,636:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:07,636:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:07,638:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:07,638:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:07,642:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:07,660:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:07,662:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:07,664:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:07,680:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:07,682:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:07,684:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:09,759:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:09,761:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:09,763:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:09,763:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:09,765:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:09,767:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:09,775:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:09,779:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:09,781:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:09,781:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:09,781:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:09,783:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:09,789:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:09,789:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:09,791:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:09,791:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:09,793:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:09,795:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-22 18:23:09,795:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:10,559:INFO:Calculating mean and std
2023-03-22 18:23:10,561:INFO:Creating metrics dataframe
2023-03-22 18:23:10,750:INFO:Uploading results into container
2023-03-22 18:23:10,752:INFO:Uploading model into container now
2023-03-22 18:23:10,752:INFO:_master_model_container: 2
2023-03-22 18:23:10,752:INFO:_display_container: 2
2023-03-22 18:23:10,752:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-03-22 18:23:10,752:INFO:create_model() successfully completed......................................
2023-03-22 18:23:10,907:INFO:SubProcess create_model() end ==================================
2023-03-22 18:23:10,909:INFO:Creating metrics dataframe
2023-03-22 18:23:10,917:INFO:Initializing Naive Bayes
2023-03-22 18:23:10,917:INFO:Total runtime is 0.16427263021469116 minutes
2023-03-22 18:23:10,919:INFO:SubProcess create_model() called ==================================
2023-03-22 18:23:10,919:INFO:Initializing create_model()
2023-03-22 18:23:10,919:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028C79C80760>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028C51216BF0>, model_only=True, return_train_score=False, kwargs={})
2023-03-22 18:23:10,919:INFO:Checking exceptions
2023-03-22 18:23:10,920:INFO:Importing libraries
2023-03-22 18:23:10,920:INFO:Copying training dataset
2023-03-22 18:23:10,923:INFO:Defining folds
2023-03-22 18:23:10,923:INFO:Declaring metric variables
2023-03-22 18:23:10,926:INFO:Importing untrained model
2023-03-22 18:23:10,930:INFO:Naive Bayes Imported successfully
2023-03-22 18:23:10,937:INFO:Starting cross validation
2023-03-22 18:23:10,938:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-22 18:23:11,147:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:11,149:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:11,149:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:11,151:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:11,151:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:11,153:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:11,153:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:11,155:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:11,155:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:11,169:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:11,171:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:11,171:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:11,173:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:11,173:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:11,175:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:11,179:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:11,181:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:11,185:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:11,185:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:11,187:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:11,189:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:11,199:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:11,201:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:11,203:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:11,219:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:11,221:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:11,223:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:11,239:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:11,241:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:11,243:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:12,597:INFO:Calculating mean and std
2023-03-22 18:23:12,599:INFO:Creating metrics dataframe
2023-03-22 18:23:12,789:INFO:Uploading results into container
2023-03-22 18:23:12,791:INFO:Uploading model into container now
2023-03-22 18:23:12,791:INFO:_master_model_container: 3
2023-03-22 18:23:12,791:INFO:_display_container: 2
2023-03-22 18:23:12,792:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-03-22 18:23:12,792:INFO:create_model() successfully completed......................................
2023-03-22 18:23:12,947:INFO:SubProcess create_model() end ==================================
2023-03-22 18:23:12,947:INFO:Creating metrics dataframe
2023-03-22 18:23:12,955:INFO:Initializing Decision Tree Classifier
2023-03-22 18:23:12,955:INFO:Total runtime is 0.19824488162994386 minutes
2023-03-22 18:23:12,959:INFO:SubProcess create_model() called ==================================
2023-03-22 18:23:12,959:INFO:Initializing create_model()
2023-03-22 18:23:12,959:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028C79C80760>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028C51216BF0>, model_only=True, return_train_score=False, kwargs={})
2023-03-22 18:23:12,960:INFO:Checking exceptions
2023-03-22 18:23:12,960:INFO:Importing libraries
2023-03-22 18:23:12,960:INFO:Copying training dataset
2023-03-22 18:23:12,963:INFO:Defining folds
2023-03-22 18:23:12,964:INFO:Declaring metric variables
2023-03-22 18:23:12,967:INFO:Importing untrained model
2023-03-22 18:23:12,971:INFO:Decision Tree Classifier Imported successfully
2023-03-22 18:23:12,977:INFO:Starting cross validation
2023-03-22 18:23:12,979:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-22 18:23:13,200:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:13,200:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:13,202:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:13,202:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:13,202:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:13,202:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:13,204:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:13,204:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:13,206:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:13,206:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:13,208:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:13,210:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:13,222:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:13,224:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:13,226:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:13,226:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:13,228:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:13,230:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:13,230:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:13,230:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:13,230:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:13,232:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:13,232:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:13,234:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:13,256:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:13,258:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:13,262:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:13,272:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:13,274:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:13,276:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:14,630:INFO:Calculating mean and std
2023-03-22 18:23:14,630:INFO:Creating metrics dataframe
2023-03-22 18:23:14,821:INFO:Uploading results into container
2023-03-22 18:23:14,823:INFO:Uploading model into container now
2023-03-22 18:23:14,823:INFO:_master_model_container: 4
2023-03-22 18:23:14,823:INFO:_display_container: 2
2023-03-22 18:23:14,823:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=42, splitter='best')
2023-03-22 18:23:14,823:INFO:create_model() successfully completed......................................
2023-03-22 18:23:14,980:INFO:SubProcess create_model() end ==================================
2023-03-22 18:23:14,980:INFO:Creating metrics dataframe
2023-03-22 18:23:14,988:INFO:Initializing SVM - Linear Kernel
2023-03-22 18:23:14,988:INFO:Total runtime is 0.23212798436482748 minutes
2023-03-22 18:23:14,992:INFO:SubProcess create_model() called ==================================
2023-03-22 18:23:14,992:INFO:Initializing create_model()
2023-03-22 18:23:14,992:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028C79C80760>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028C51216BF0>, model_only=True, return_train_score=False, kwargs={})
2023-03-22 18:23:14,992:INFO:Checking exceptions
2023-03-22 18:23:14,992:INFO:Importing libraries
2023-03-22 18:23:14,992:INFO:Copying training dataset
2023-03-22 18:23:14,996:INFO:Defining folds
2023-03-22 18:23:14,996:INFO:Declaring metric variables
2023-03-22 18:23:14,999:INFO:Importing untrained model
2023-03-22 18:23:15,003:INFO:SVM - Linear Kernel Imported successfully
2023-03-22 18:23:15,009:INFO:Starting cross validation
2023-03-22 18:23:15,011:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-22 18:23:15,194:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-03-22 18:23:15,196:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:15,198:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:15,200:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-22 18:23:15,200:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:15,202:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-03-22 18:23:15,202:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-03-22 18:23:15,204:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:15,204:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-03-22 18:23:15,204:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:15,204:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:15,206:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:15,206:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:15,206:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:15,208:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-22 18:23:15,208:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-22 18:23:15,208:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-22 18:23:15,208:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:15,208:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-03-22 18:23:15,208:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:15,210:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:15,210:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:15,212:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:15,212:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-03-22 18:23:15,214:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-22 18:23:15,214:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:15,214:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:15,216:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:15,216:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-03-22 18:23:15,216:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-22 18:23:15,218:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:15,218:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:15,220:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:15,222:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-22 18:23:15,222:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:15,246:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-03-22 18:23:15,248:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:15,250:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:15,252:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-22 18:23:15,252:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:15,256:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-03-22 18:23:15,256:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-03-22 18:23:15,258:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:15,258:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:15,258:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:15,260:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-22 18:23:15,260:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:15,260:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:15,262:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-22 18:23:15,262:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:16,634:INFO:Calculating mean and std
2023-03-22 18:23:16,634:INFO:Creating metrics dataframe
2023-03-22 18:23:16,824:INFO:Uploading results into container
2023-03-22 18:23:16,824:INFO:Uploading model into container now
2023-03-22 18:23:16,824:INFO:_master_model_container: 5
2023-03-22 18:23:16,824:INFO:_display_container: 2
2023-03-22 18:23:16,824:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-03-22 18:23:16,824:INFO:create_model() successfully completed......................................
2023-03-22 18:23:16,981:INFO:SubProcess create_model() end ==================================
2023-03-22 18:23:16,981:INFO:Creating metrics dataframe
2023-03-22 18:23:16,993:INFO:Initializing Ridge Classifier
2023-03-22 18:23:16,993:INFO:Total runtime is 0.2655399282773336 minutes
2023-03-22 18:23:16,996:INFO:SubProcess create_model() called ==================================
2023-03-22 18:23:16,996:INFO:Initializing create_model()
2023-03-22 18:23:16,996:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028C79C80760>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028C51216BF0>, model_only=True, return_train_score=False, kwargs={})
2023-03-22 18:23:16,996:INFO:Checking exceptions
2023-03-22 18:23:16,996:INFO:Importing libraries
2023-03-22 18:23:16,997:INFO:Copying training dataset
2023-03-22 18:23:17,000:INFO:Defining folds
2023-03-22 18:23:17,001:INFO:Declaring metric variables
2023-03-22 18:23:17,003:INFO:Importing untrained model
2023-03-22 18:23:17,006:INFO:Ridge Classifier Imported successfully
2023-03-22 18:23:17,012:INFO:Starting cross validation
2023-03-22 18:23:17,014:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-22 18:23:17,175:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-03-22 18:23:17,175:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:17,177:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:17,179:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:17,185:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-03-22 18:23:17,185:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:17,187:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:17,189:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:17,193:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-03-22 18:23:17,193:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:17,193:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-03-22 18:23:17,193:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-03-22 18:23:17,193:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:17,195:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:17,195:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:17,195:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:17,195:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:17,197:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:17,197:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:17,199:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:17,207:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-03-22 18:23:17,207:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:17,207:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-03-22 18:23:17,209:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:17,209:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:17,211:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:17,211:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:17,213:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:17,217:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-03-22 18:23:17,217:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:17,219:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:17,221:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:17,241:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-03-22 18:23:17,243:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:17,245:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:17,245:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-03-22 18:23:17,245:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:17,245:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:17,247:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:17,251:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:18,614:INFO:Calculating mean and std
2023-03-22 18:23:18,616:INFO:Creating metrics dataframe
2023-03-22 18:23:18,804:INFO:Uploading results into container
2023-03-22 18:23:18,806:INFO:Uploading model into container now
2023-03-22 18:23:18,806:INFO:_master_model_container: 6
2023-03-22 18:23:18,806:INFO:_display_container: 2
2023-03-22 18:23:18,806:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2023-03-22 18:23:18,806:INFO:create_model() successfully completed......................................
2023-03-22 18:23:18,962:INFO:SubProcess create_model() end ==================================
2023-03-22 18:23:18,962:INFO:Creating metrics dataframe
2023-03-22 18:23:18,972:INFO:Initializing Random Forest Classifier
2023-03-22 18:23:18,972:INFO:Total runtime is 0.29853363434473673 minutes
2023-03-22 18:23:18,974:INFO:SubProcess create_model() called ==================================
2023-03-22 18:23:18,976:INFO:Initializing create_model()
2023-03-22 18:23:18,976:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028C79C80760>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028C51216BF0>, model_only=True, return_train_score=False, kwargs={})
2023-03-22 18:23:18,976:INFO:Checking exceptions
2023-03-22 18:23:18,976:INFO:Importing libraries
2023-03-22 18:23:18,976:INFO:Copying training dataset
2023-03-22 18:23:18,979:INFO:Defining folds
2023-03-22 18:23:18,980:INFO:Declaring metric variables
2023-03-22 18:23:18,982:INFO:Importing untrained model
2023-03-22 18:23:18,986:INFO:Random Forest Classifier Imported successfully
2023-03-22 18:23:18,994:INFO:Starting cross validation
2023-03-22 18:23:18,996:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-22 18:23:19,415:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:19,419:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:19,421:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:19,433:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:19,435:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:19,437:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:19,437:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:19,439:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:19,441:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:19,443:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:19,447:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:19,447:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:19,449:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:19,449:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:19,451:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:19,453:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:19,455:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:19,459:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:19,483:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:19,487:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:19,489:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:19,517:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:19,517:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:19,519:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:19,521:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:19,521:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:19,521:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:19,523:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:19,525:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:19,527:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:20,870:INFO:Calculating mean and std
2023-03-22 18:23:20,872:INFO:Creating metrics dataframe
2023-03-22 18:23:21,065:INFO:Uploading results into container
2023-03-22 18:23:21,065:INFO:Uploading model into container now
2023-03-22 18:23:21,065:INFO:_master_model_container: 7
2023-03-22 18:23:21,065:INFO:_display_container: 2
2023-03-22 18:23:21,067:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=42, verbose=0, warm_start=False)
2023-03-22 18:23:21,067:INFO:create_model() successfully completed......................................
2023-03-22 18:23:21,223:INFO:SubProcess create_model() end ==================================
2023-03-22 18:23:21,223:INFO:Creating metrics dataframe
2023-03-22 18:23:21,233:INFO:Initializing Quadratic Discriminant Analysis
2023-03-22 18:23:21,233:INFO:Total runtime is 0.336210556825002 minutes
2023-03-22 18:23:21,236:INFO:SubProcess create_model() called ==================================
2023-03-22 18:23:21,236:INFO:Initializing create_model()
2023-03-22 18:23:21,236:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028C79C80760>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028C51216BF0>, model_only=True, return_train_score=False, kwargs={})
2023-03-22 18:23:21,237:INFO:Checking exceptions
2023-03-22 18:23:21,237:INFO:Importing libraries
2023-03-22 18:23:21,237:INFO:Copying training dataset
2023-03-22 18:23:21,240:INFO:Defining folds
2023-03-22 18:23:21,240:INFO:Declaring metric variables
2023-03-22 18:23:21,243:INFO:Importing untrained model
2023-03-22 18:23:21,247:INFO:Quadratic Discriminant Analysis Imported successfully
2023-03-22 18:23:21,253:INFO:Starting cross validation
2023-03-22 18:23:21,254:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-22 18:23:21,368:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-03-22 18:23:21,387:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-03-22 18:23:21,388:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-03-22 18:23:21,388:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-03-22 18:23:21,392:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-03-22 18:23:21,408:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-03-22 18:23:21,412:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-22 18:23:21,412:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-22 18:23:21,412:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-03-22 18:23:21,427:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-03-22 18:23:21,427:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-03-22 18:23:21,427:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-03-22 18:23:21,432:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-22 18:23:21,432:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-22 18:23:21,433:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-03-22 18:23:21,437:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-03-22 18:23:21,445:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-22 18:23:21,446:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-22 18:23:21,445:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-22 18:23:21,446:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-03-22 18:23:21,446:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-22 18:23:21,446:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-03-22 18:23:21,452:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-22 18:23:21,452:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-22 18:23:21,452:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-03-22 18:23:21,461:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-22 18:23:21,462:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-22 18:23:21,462:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-03-22 18:23:21,465:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-03-22 18:23:21,466:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-22 18:23:21,466:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-22 18:23:21,466:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-03-22 18:23:21,467:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:21,469:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:21,471:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-22 18:23:21,472:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:21,478:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-22 18:23:21,478:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-22 18:23:21,478:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-03-22 18:23:21,481:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-03-22 18:23:21,482:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:21,482:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-22 18:23:21,482:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-22 18:23:21,483:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-03-22 18:23:21,483:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:21,484:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-22 18:23:21,485:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:21,489:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-22 18:23:21,489:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-22 18:23:21,490:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-03-22 18:23:21,491:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-22 18:23:21,492:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-22 18:23:21,492:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-03-22 18:23:21,499:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-22 18:23:21,499:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-22 18:23:21,499:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-03-22 18:23:21,506:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-22 18:23:21,506:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-22 18:23:21,506:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-03-22 18:23:21,506:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-22 18:23:21,506:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-22 18:23:21,507:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-03-22 18:23:21,509:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-03-22 18:23:21,510:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-03-22 18:23:21,510:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:21,511:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:21,512:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:21,513:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-22 18:23:21,513:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:21,514:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:21,515:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-22 18:23:21,516:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:21,517:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-22 18:23:21,517:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-22 18:23:21,517:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-03-22 18:23:21,521:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-03-22 18:23:21,522:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:21,524:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:21,525:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-22 18:23:21,527:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:21,531:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-22 18:23:21,531:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-22 18:23:21,532:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-03-22 18:23:21,535:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-03-22 18:23:21,536:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:21,539:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:21,540:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-22 18:23:21,540:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-22 18:23:21,541:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-03-22 18:23:21,541:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-22 18:23:21,542:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:21,542:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-22 18:23:21,542:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-22 18:23:21,542:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-03-22 18:23:21,544:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-03-22 18:23:21,544:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:21,545:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-03-22 18:23:21,546:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:21,546:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:21,547:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-22 18:23:21,548:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:21,548:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:21,550:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-22 18:23:21,551:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:21,558:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-22 18:23:21,558:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-22 18:23:21,558:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-03-22 18:23:21,562:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-03-22 18:23:21,563:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:21,565:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-22 18:23:21,565:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-03-22 18:23:21,565:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:21,565:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-03-22 18:23:21,566:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-22 18:23:21,568:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:21,569:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-03-22 18:23:21,570:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:21,572:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:21,573:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-22 18:23:21,574:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:22,991:INFO:Calculating mean and std
2023-03-22 18:23:22,992:INFO:Creating metrics dataframe
2023-03-22 18:23:23,195:INFO:Uploading results into container
2023-03-22 18:23:23,196:INFO:Uploading model into container now
2023-03-22 18:23:23,196:INFO:_master_model_container: 8
2023-03-22 18:23:23,196:INFO:_display_container: 2
2023-03-22 18:23:23,196:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-03-22 18:23:23,196:INFO:create_model() successfully completed......................................
2023-03-22 18:23:23,353:INFO:SubProcess create_model() end ==================================
2023-03-22 18:23:23,354:INFO:Creating metrics dataframe
2023-03-22 18:23:23,364:INFO:Initializing Ada Boost Classifier
2023-03-22 18:23:23,364:INFO:Total runtime is 0.37172979513804116 minutes
2023-03-22 18:23:23,366:INFO:SubProcess create_model() called ==================================
2023-03-22 18:23:23,367:INFO:Initializing create_model()
2023-03-22 18:23:23,367:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028C79C80760>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028C51216BF0>, model_only=True, return_train_score=False, kwargs={})
2023-03-22 18:23:23,367:INFO:Checking exceptions
2023-03-22 18:23:23,367:INFO:Importing libraries
2023-03-22 18:23:23,367:INFO:Copying training dataset
2023-03-22 18:23:23,371:INFO:Defining folds
2023-03-22 18:23:23,371:INFO:Declaring metric variables
2023-03-22 18:23:23,374:INFO:Importing untrained model
2023-03-22 18:23:23,377:INFO:Ada Boost Classifier Imported successfully
2023-03-22 18:23:23,384:INFO:Starting cross validation
2023-03-22 18:23:23,386:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-22 18:23:23,731:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:23,733:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:23,735:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:23,736:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:23,738:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:23,740:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:23,757:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:23,759:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:23,760:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:23,772:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:23,774:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:23,776:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:23,782:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:23,783:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:23,785:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:23,786:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:23,787:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:23,789:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:23,791:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:23,794:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:23,804:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:23,806:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:23,807:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:23,812:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:23,814:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:23,816:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:23,868:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:23,870:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:23,872:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:25,220:INFO:Calculating mean and std
2023-03-22 18:23:25,221:INFO:Creating metrics dataframe
2023-03-22 18:23:25,413:INFO:Uploading results into container
2023-03-22 18:23:25,414:INFO:Uploading model into container now
2023-03-22 18:23:25,414:INFO:_master_model_container: 9
2023-03-22 18:23:25,414:INFO:_display_container: 2
2023-03-22 18:23:25,415:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=42)
2023-03-22 18:23:25,415:INFO:create_model() successfully completed......................................
2023-03-22 18:23:25,595:INFO:SubProcess create_model() end ==================================
2023-03-22 18:23:25,595:INFO:Creating metrics dataframe
2023-03-22 18:23:25,606:INFO:Initializing Gradient Boosting Classifier
2023-03-22 18:23:25,606:INFO:Total runtime is 0.40909353494644163 minutes
2023-03-22 18:23:25,608:INFO:SubProcess create_model() called ==================================
2023-03-22 18:23:25,608:INFO:Initializing create_model()
2023-03-22 18:23:25,608:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028C79C80760>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028C51216BF0>, model_only=True, return_train_score=False, kwargs={})
2023-03-22 18:23:25,609:INFO:Checking exceptions
2023-03-22 18:23:25,609:INFO:Importing libraries
2023-03-22 18:23:25,609:INFO:Copying training dataset
2023-03-22 18:23:25,612:INFO:Defining folds
2023-03-22 18:23:25,612:INFO:Declaring metric variables
2023-03-22 18:23:25,614:INFO:Importing untrained model
2023-03-22 18:23:25,618:INFO:Gradient Boosting Classifier Imported successfully
2023-03-22 18:23:25,624:INFO:Starting cross validation
2023-03-22 18:23:25,626:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-22 18:23:26,159:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:26,160:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:26,162:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:26,172:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:26,175:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:26,177:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:26,180:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:26,182:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:26,183:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:26,184:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:26,185:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:26,185:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:26,188:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:26,189:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:26,191:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:26,203:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:26,205:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:26,205:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:26,207:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:26,207:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:26,209:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:26,224:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:26,227:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:26,229:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:26,265:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:26,268:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:26,270:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:26,275:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:26,277:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:26,280:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:27,661:INFO:Calculating mean and std
2023-03-22 18:23:27,662:INFO:Creating metrics dataframe
2023-03-22 18:23:27,868:INFO:Uploading results into container
2023-03-22 18:23:27,868:INFO:Uploading model into container now
2023-03-22 18:23:27,870:INFO:_master_model_container: 10
2023-03-22 18:23:27,870:INFO:_display_container: 2
2023-03-22 18:23:27,870:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-03-22 18:23:27,870:INFO:create_model() successfully completed......................................
2023-03-22 18:23:28,027:INFO:SubProcess create_model() end ==================================
2023-03-22 18:23:28,027:INFO:Creating metrics dataframe
2023-03-22 18:23:28,038:INFO:Initializing Linear Discriminant Analysis
2023-03-22 18:23:28,038:INFO:Total runtime is 0.44962711731592814 minutes
2023-03-22 18:23:28,041:INFO:SubProcess create_model() called ==================================
2023-03-22 18:23:28,041:INFO:Initializing create_model()
2023-03-22 18:23:28,041:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028C79C80760>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028C51216BF0>, model_only=True, return_train_score=False, kwargs={})
2023-03-22 18:23:28,041:INFO:Checking exceptions
2023-03-22 18:23:28,042:INFO:Importing libraries
2023-03-22 18:23:28,042:INFO:Copying training dataset
2023-03-22 18:23:28,045:INFO:Defining folds
2023-03-22 18:23:28,046:INFO:Declaring metric variables
2023-03-22 18:23:28,048:INFO:Importing untrained model
2023-03-22 18:23:28,051:INFO:Linear Discriminant Analysis Imported successfully
2023-03-22 18:23:28,057:INFO:Starting cross validation
2023-03-22 18:23:28,059:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-22 18:23:28,276:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:28,278:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:28,279:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:28,291:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:28,293:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:28,294:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:28,297:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:28,298:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:28,299:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:28,301:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:28,302:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:28,303:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:28,307:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:28,309:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:28,312:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:28,312:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:28,315:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:28,315:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:28,317:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:28,317:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:28,320:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:28,320:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:28,322:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:28,324:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:28,363:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:28,366:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:28,366:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:28,368:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:28,368:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:28,370:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:29,749:INFO:Calculating mean and std
2023-03-22 18:23:29,750:INFO:Creating metrics dataframe
2023-03-22 18:23:29,949:INFO:Uploading results into container
2023-03-22 18:23:29,950:INFO:Uploading model into container now
2023-03-22 18:23:29,951:INFO:_master_model_container: 11
2023-03-22 18:23:29,951:INFO:_display_container: 2
2023-03-22 18:23:29,951:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-03-22 18:23:29,952:INFO:create_model() successfully completed......................................
2023-03-22 18:23:30,143:INFO:SubProcess create_model() end ==================================
2023-03-22 18:23:30,144:INFO:Creating metrics dataframe
2023-03-22 18:23:30,160:INFO:Initializing Extra Trees Classifier
2023-03-22 18:23:30,160:INFO:Total runtime is 0.4849867622057597 minutes
2023-03-22 18:23:30,164:INFO:SubProcess create_model() called ==================================
2023-03-22 18:23:30,164:INFO:Initializing create_model()
2023-03-22 18:23:30,164:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028C79C80760>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028C51216BF0>, model_only=True, return_train_score=False, kwargs={})
2023-03-22 18:23:30,164:INFO:Checking exceptions
2023-03-22 18:23:30,164:INFO:Importing libraries
2023-03-22 18:23:30,164:INFO:Copying training dataset
2023-03-22 18:23:30,168:INFO:Defining folds
2023-03-22 18:23:30,169:INFO:Declaring metric variables
2023-03-22 18:23:30,173:INFO:Importing untrained model
2023-03-22 18:23:30,177:INFO:Extra Trees Classifier Imported successfully
2023-03-22 18:23:30,185:INFO:Starting cross validation
2023-03-22 18:23:30,187:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-22 18:23:30,674:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:30,676:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:30,677:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:30,679:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:30,682:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:30,682:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:30,684:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:30,685:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:30,686:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:30,687:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:30,689:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:30,690:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:30,691:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:30,692:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:30,693:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:30,693:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:30,694:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:30,695:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:30,736:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:30,739:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:30,741:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:30,747:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:30,749:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:30,751:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:30,751:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:30,753:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:30,753:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:30,755:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:30,755:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:30,757:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:32,152:INFO:Calculating mean and std
2023-03-22 18:23:32,153:INFO:Creating metrics dataframe
2023-03-22 18:23:32,355:INFO:Uploading results into container
2023-03-22 18:23:32,356:INFO:Uploading model into container now
2023-03-22 18:23:32,356:INFO:_master_model_container: 12
2023-03-22 18:23:32,356:INFO:_display_container: 2
2023-03-22 18:23:32,357:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=42, verbose=0, warm_start=False)
2023-03-22 18:23:32,357:INFO:create_model() successfully completed......................................
2023-03-22 18:23:32,517:INFO:SubProcess create_model() end ==================================
2023-03-22 18:23:32,517:INFO:Creating metrics dataframe
2023-03-22 18:23:32,530:INFO:Initializing Extreme Gradient Boosting
2023-03-22 18:23:32,531:INFO:Total runtime is 0.524514377117157 minutes
2023-03-22 18:23:32,533:INFO:SubProcess create_model() called ==================================
2023-03-22 18:23:32,534:INFO:Initializing create_model()
2023-03-22 18:23:32,534:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028C79C80760>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028C51216BF0>, model_only=True, return_train_score=False, kwargs={})
2023-03-22 18:23:32,534:INFO:Checking exceptions
2023-03-22 18:23:32,534:INFO:Importing libraries
2023-03-22 18:23:32,534:INFO:Copying training dataset
2023-03-22 18:23:32,537:INFO:Defining folds
2023-03-22 18:23:32,538:INFO:Declaring metric variables
2023-03-22 18:23:32,541:INFO:Importing untrained model
2023-03-22 18:23:32,545:INFO:Extreme Gradient Boosting Imported successfully
2023-03-22 18:23:32,553:INFO:Starting cross validation
2023-03-22 18:23:32,554:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-22 18:23:32,831:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:32,833:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:32,835:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:32,848:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:32,851:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:32,853:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:32,865:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:32,867:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:32,868:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:32,869:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:32,871:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:32,872:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:32,873:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:32,875:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:32,877:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:32,897:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:32,899:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:32,900:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:32,902:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:32,903:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:32,905:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:32,905:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:32,907:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:32,910:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:32,927:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:32,929:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:32,931:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:32,941:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:32,942:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:32,943:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:34,290:INFO:Calculating mean and std
2023-03-22 18:23:34,291:INFO:Creating metrics dataframe
2023-03-22 18:23:34,483:INFO:Uploading results into container
2023-03-22 18:23:34,483:INFO:Uploading model into container now
2023-03-22 18:23:34,483:INFO:_master_model_container: 13
2023-03-22 18:23:34,483:INFO:_display_container: 2
2023-03-22 18:23:34,485:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', predictor=None, ...)
2023-03-22 18:23:34,485:INFO:create_model() successfully completed......................................
2023-03-22 18:23:34,641:INFO:SubProcess create_model() end ==================================
2023-03-22 18:23:34,641:INFO:Creating metrics dataframe
2023-03-22 18:23:34,655:INFO:Initializing Light Gradient Boosting Machine
2023-03-22 18:23:34,655:INFO:Total runtime is 0.5599093993504842 minutes
2023-03-22 18:23:34,657:INFO:SubProcess create_model() called ==================================
2023-03-22 18:23:34,657:INFO:Initializing create_model()
2023-03-22 18:23:34,658:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028C79C80760>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028C51216BF0>, model_only=True, return_train_score=False, kwargs={})
2023-03-22 18:23:34,658:INFO:Checking exceptions
2023-03-22 18:23:34,658:INFO:Importing libraries
2023-03-22 18:23:34,658:INFO:Copying training dataset
2023-03-22 18:23:34,661:INFO:Defining folds
2023-03-22 18:23:34,661:INFO:Declaring metric variables
2023-03-22 18:23:34,664:INFO:Importing untrained model
2023-03-22 18:23:34,668:INFO:Light Gradient Boosting Machine Imported successfully
2023-03-22 18:23:34,675:INFO:Starting cross validation
2023-03-22 18:23:34,677:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-22 18:23:35,856:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:35,858:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:35,859:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:35,875:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:35,877:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:35,879:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:35,880:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:35,883:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:35,885:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:35,894:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:35,897:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:35,900:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:35,917:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:35,925:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:35,925:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:35,926:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:35,928:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:35,929:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:35,929:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:35,932:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:35,932:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:35,932:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:35,935:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:35,938:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:35,951:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:35,954:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:35,956:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:35,962:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:35,964:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:35,965:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:37,343:INFO:Calculating mean and std
2023-03-22 18:23:37,343:INFO:Creating metrics dataframe
2023-03-22 18:23:37,537:INFO:Uploading results into container
2023-03-22 18:23:37,538:INFO:Uploading model into container now
2023-03-22 18:23:37,538:INFO:_master_model_container: 14
2023-03-22 18:23:37,539:INFO:_display_container: 2
2023-03-22 18:23:37,539:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-03-22 18:23:37,539:INFO:create_model() successfully completed......................................
2023-03-22 18:23:37,702:INFO:SubProcess create_model() end ==================================
2023-03-22 18:23:37,702:INFO:Creating metrics dataframe
2023-03-22 18:23:37,714:INFO:Initializing CatBoost Classifier
2023-03-22 18:23:37,715:INFO:Total runtime is 0.6109101335207622 minutes
2023-03-22 18:23:37,717:INFO:SubProcess create_model() called ==================================
2023-03-22 18:23:37,717:INFO:Initializing create_model()
2023-03-22 18:23:37,717:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028C79C80760>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028C51216BF0>, model_only=True, return_train_score=False, kwargs={})
2023-03-22 18:23:37,717:INFO:Checking exceptions
2023-03-22 18:23:37,718:INFO:Importing libraries
2023-03-22 18:23:37,718:INFO:Copying training dataset
2023-03-22 18:23:37,721:INFO:Defining folds
2023-03-22 18:23:37,722:INFO:Declaring metric variables
2023-03-22 18:23:37,724:INFO:Importing untrained model
2023-03-22 18:23:37,728:INFO:CatBoost Classifier Imported successfully
2023-03-22 18:23:37,735:INFO:Starting cross validation
2023-03-22 18:23:37,737:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-22 18:23:38,786:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:38,789:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:38,791:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:38,801:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:38,803:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:38,804:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:38,805:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:38,807:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:38,809:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:38,810:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:38,811:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:38,814:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:38,827:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:38,827:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:38,828:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:38,829:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:38,829:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:38,830:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:38,830:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:38,830:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:38,831:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:38,832:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:38,834:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:38,836:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:38,837:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:38,838:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:38,839:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:38,839:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:38,841:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:40,275:INFO:Calculating mean and std
2023-03-22 18:23:40,276:INFO:Creating metrics dataframe
2023-03-22 18:23:40,468:INFO:Uploading results into container
2023-03-22 18:23:40,469:INFO:Uploading model into container now
2023-03-22 18:23:40,469:INFO:_master_model_container: 15
2023-03-22 18:23:40,469:INFO:_display_container: 2
2023-03-22 18:23:40,469:INFO:<catboost.core.CatBoostClassifier object at 0x0000028C4EDEE380>
2023-03-22 18:23:40,469:INFO:create_model() successfully completed......................................
2023-03-22 18:23:40,635:INFO:SubProcess create_model() end ==================================
2023-03-22 18:23:40,635:INFO:Creating metrics dataframe
2023-03-22 18:23:40,648:INFO:Initializing Dummy Classifier
2023-03-22 18:23:40,648:INFO:Total runtime is 0.6597889502843222 minutes
2023-03-22 18:23:40,651:INFO:SubProcess create_model() called ==================================
2023-03-22 18:23:40,651:INFO:Initializing create_model()
2023-03-22 18:23:40,651:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028C79C80760>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028C51216BF0>, model_only=True, return_train_score=False, kwargs={})
2023-03-22 18:23:40,651:INFO:Checking exceptions
2023-03-22 18:23:40,651:INFO:Importing libraries
2023-03-22 18:23:40,651:INFO:Copying training dataset
2023-03-22 18:23:40,655:INFO:Defining folds
2023-03-22 18:23:40,655:INFO:Declaring metric variables
2023-03-22 18:23:40,658:INFO:Importing untrained model
2023-03-22 18:23:40,662:INFO:Dummy Classifier Imported successfully
2023-03-22 18:23:40,669:INFO:Starting cross validation
2023-03-22 18:23:40,671:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-22 18:23:40,869:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:40,869:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:40,871:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:40,871:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:40,872:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-22 18:23:40,872:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:40,872:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-22 18:23:40,874:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:40,879:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:40,881:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:40,882:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-22 18:23:40,882:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:40,882:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:40,884:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:40,884:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-22 18:23:40,885:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:40,895:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:40,896:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:40,897:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-22 18:23:40,898:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:40,922:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:40,924:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:40,924:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:40,925:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-22 18:23:40,925:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:40,927:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:40,928:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:40,928:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-22 18:23:40,928:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:40,929:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:40,930:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:40,930:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:40,931:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-22 18:23:40,932:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:40,932:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-22 18:23:40,933:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:40,971:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:40,974:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:40,975:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-03-22 18:23:40,976:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:23:42,349:INFO:Calculating mean and std
2023-03-22 18:23:42,350:INFO:Creating metrics dataframe
2023-03-22 18:23:42,537:INFO:Uploading results into container
2023-03-22 18:23:42,539:INFO:Uploading model into container now
2023-03-22 18:23:42,539:INFO:_master_model_container: 16
2023-03-22 18:23:42,539:INFO:_display_container: 2
2023-03-22 18:23:42,539:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2023-03-22 18:23:42,539:INFO:create_model() successfully completed......................................
2023-03-22 18:23:42,695:INFO:SubProcess create_model() end ==================================
2023-03-22 18:23:42,695:INFO:Creating metrics dataframe
2023-03-22 18:23:42,717:INFO:Initializing create_model()
2023-03-22 18:23:42,717:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028C79C80760>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-03-22 18:23:42,717:INFO:Checking exceptions
2023-03-22 18:23:42,718:INFO:Importing libraries
2023-03-22 18:23:42,719:INFO:Copying training dataset
2023-03-22 18:23:42,722:INFO:Defining folds
2023-03-22 18:23:42,722:INFO:Declaring metric variables
2023-03-22 18:23:42,722:INFO:Importing untrained model
2023-03-22 18:23:42,722:INFO:Declaring custom model
2023-03-22 18:23:42,722:INFO:Linear Discriminant Analysis Imported successfully
2023-03-22 18:23:42,723:INFO:Cross validation set to False
2023-03-22 18:23:42,723:INFO:Fitting Model
2023-03-22 18:23:42,940:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-03-22 18:23:42,942:INFO:create_model() successfully completed......................................
2023-03-22 18:23:43,128:INFO:_master_model_container: 16
2023-03-22 18:23:43,128:INFO:_display_container: 2
2023-03-22 18:23:43,129:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-03-22 18:23:43,129:INFO:compare_models() successfully completed......................................
2023-03-22 18:25:35,365:INFO:Initializing create_model()
2023-03-22 18:25:35,365:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028C79C80760>, estimator=gbc, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-03-22 18:25:35,365:INFO:Checking exceptions
2023-03-22 18:25:35,380:INFO:Importing libraries
2023-03-22 18:25:35,380:INFO:Copying training dataset
2023-03-22 18:25:35,383:INFO:Defining folds
2023-03-22 18:25:35,384:INFO:Declaring metric variables
2023-03-22 18:25:35,387:INFO:Importing untrained model
2023-03-22 18:25:35,390:INFO:Gradient Boosting Classifier Imported successfully
2023-03-22 18:25:35,397:INFO:Starting cross validation
2023-03-22 18:25:35,398:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-22 18:25:35,842:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:25:35,844:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:25:35,846:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:25:35,872:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:25:35,874:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:25:35,876:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:25:35,902:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:25:35,904:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:25:35,904:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:25:35,908:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:25:35,910:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:25:35,912:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:25:35,916:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:25:35,918:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:25:35,920:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:25:35,986:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:25:35,988:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:25:35,990:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:25:35,996:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:25:35,998:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:25:36,000:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:25:36,002:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:25:36,002:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:25:36,004:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:25:36,016:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:25:36,018:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:25:36,022:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:25:36,072:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:25:36,074:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:25:36,076:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:25:37,291:INFO:Calculating mean and std
2023-03-22 18:25:37,293:INFO:Creating metrics dataframe
2023-03-22 18:25:37,299:INFO:Finalizing model
2023-03-22 18:25:37,563:INFO:Uploading results into container
2023-03-22 18:25:37,563:INFO:Uploading model into container now
2023-03-22 18:25:37,573:INFO:_master_model_container: 17
2023-03-22 18:25:37,573:INFO:_display_container: 3
2023-03-22 18:25:37,573:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-03-22 18:25:37,573:INFO:create_model() successfully completed......................................
2023-03-22 18:25:40,785:INFO:Initializing plot_model()
2023-03-22 18:25:40,785:INFO:plot_model(plot=confusion_matrix, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028C79C80760>, system=True)
2023-03-22 18:25:40,785:INFO:Checking exceptions
2023-03-22 18:25:40,790:INFO:Preloading libraries
2023-03-22 18:25:40,816:INFO:Copying training dataset
2023-03-22 18:25:40,816:INFO:Plot type: confusion_matrix
2023-03-22 18:25:40,993:INFO:Fitting Model
2023-03-22 18:25:40,993:INFO:Scoring test/hold-out set
2023-03-22 18:25:41,119:INFO:Visual Rendered Successfully
2023-03-22 18:25:41,277:INFO:plot_model() successfully completed......................................
2023-03-22 18:25:41,791:INFO:Initializing plot_model()
2023-03-22 18:25:41,791:INFO:plot_model(plot=auc, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028C79C80760>, system=True)
2023-03-22 18:25:41,791:INFO:Checking exceptions
2023-03-22 18:25:41,796:INFO:Preloading libraries
2023-03-22 18:25:41,817:INFO:Copying training dataset
2023-03-22 18:25:41,817:INFO:Plot type: auc
2023-03-22 18:25:41,997:INFO:Fitting Model
2023-03-22 18:25:41,997:INFO:Scoring test/hold-out set
2023-03-22 18:25:42,191:INFO:Visual Rendered Successfully
2023-03-22 18:25:42,349:INFO:plot_model() successfully completed......................................
2023-03-22 18:25:43,144:INFO:Initializing plot_model()
2023-03-22 18:25:43,144:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028C79C80760>, system=True)
2023-03-22 18:25:43,144:INFO:Checking exceptions
2023-03-22 18:25:43,149:INFO:Preloading libraries
2023-03-22 18:25:43,171:INFO:Copying training dataset
2023-03-22 18:25:43,172:INFO:Plot type: feature
2023-03-22 18:25:43,172:WARNING:No coef_ found. Trying feature_importances_
2023-03-22 18:25:43,362:INFO:Visual Rendered Successfully
2023-03-22 18:25:43,520:INFO:plot_model() successfully completed......................................
2023-03-22 18:25:50,617:INFO:Initializing evaluate_model()
2023-03-22 18:25:50,617:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028C79C80760>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-03-22 18:25:50,629:INFO:Initializing plot_model()
2023-03-22 18:25:50,630:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028C79C80760>, system=True)
2023-03-22 18:25:50,630:INFO:Checking exceptions
2023-03-22 18:25:50,633:INFO:Preloading libraries
2023-03-22 18:25:50,653:INFO:Copying training dataset
2023-03-22 18:25:50,654:INFO:Plot type: pipeline
2023-03-22 18:25:50,858:INFO:Visual Rendered Successfully
2023-03-22 18:25:51,014:INFO:plot_model() successfully completed......................................
2023-03-22 18:25:58,979:INFO:Initializing predict_model()
2023-03-22 18:25:58,979:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028C79C80760>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000028C3BCD3640>)
2023-03-22 18:25:58,979:INFO:Checking exceptions
2023-03-22 18:25:58,979:INFO:Preloading libraries
2023-03-22 18:26:07,323:INFO:Initializing tune_model()
2023-03-22 18:26:07,324:INFO:tune_model(estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028C79C80760>)
2023-03-22 18:26:07,324:INFO:Checking exceptions
2023-03-22 18:26:07,338:INFO:Copying training dataset
2023-03-22 18:26:07,341:INFO:Checking base model
2023-03-22 18:26:07,341:INFO:Base model : Gradient Boosting Classifier
2023-03-22 18:26:07,344:INFO:Declaring metric variables
2023-03-22 18:26:07,347:INFO:Defining Hyperparameters
2023-03-22 18:26:07,510:INFO:Tuning with n_jobs=-1
2023-03-22 18:26:07,510:INFO:Initializing RandomizedSearchCV
2023-03-22 18:26:25,015:INFO:best_params: {'actual_estimator__subsample': 0.8, 'actual_estimator__n_estimators': 110, 'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0, 'actual_estimator__max_features': 'log2', 'actual_estimator__max_depth': 4, 'actual_estimator__learning_rate': 0.4}
2023-03-22 18:26:25,015:INFO:Hyperparameter search completed
2023-03-22 18:26:25,015:INFO:SubProcess create_model() called ==================================
2023-03-22 18:26:25,017:INFO:Initializing create_model()
2023-03-22 18:26:25,017:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028C79C80760>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000028C45E838E0>, model_only=True, return_train_score=False, kwargs={'subsample': 0.8, 'n_estimators': 110, 'min_samples_split': 5, 'min_samples_leaf': 2, 'min_impurity_decrease': 0, 'max_features': 'log2', 'max_depth': 4, 'learning_rate': 0.4})
2023-03-22 18:26:25,017:INFO:Checking exceptions
2023-03-22 18:26:25,017:INFO:Importing libraries
2023-03-22 18:26:25,017:INFO:Copying training dataset
2023-03-22 18:26:25,020:INFO:Defining folds
2023-03-22 18:26:25,020:INFO:Declaring metric variables
2023-03-22 18:26:25,024:INFO:Importing untrained model
2023-03-22 18:26:25,024:INFO:Declaring custom model
2023-03-22 18:26:25,027:INFO:Gradient Boosting Classifier Imported successfully
2023-03-22 18:26:25,033:INFO:Starting cross validation
2023-03-22 18:26:25,035:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-22 18:26:25,503:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:26:25,505:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:26:25,507:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:26:25,519:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:26:25,521:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:26:25,525:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:26:25,527:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:26:25,527:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:26:25,529:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:26:25,533:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:26:25,533:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:26:25,535:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:26:25,535:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:26:25,537:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:26:25,537:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:26:25,635:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:26:25,637:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:26:25,639:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:26:25,663:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:26:25,665:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:26:25,667:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:26:25,671:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:26:25,673:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:26:25,673:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:26:25,687:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:26:25,687:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:26:25,689:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:26:25,713:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:26:25,715:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:26:25,717:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:26:26,955:INFO:Calculating mean and std
2023-03-22 18:26:26,957:INFO:Creating metrics dataframe
2023-03-22 18:26:26,962:INFO:Finalizing model
2023-03-22 18:26:27,226:INFO:Uploading results into container
2023-03-22 18:26:27,228:INFO:Uploading model into container now
2023-03-22 18:26:27,229:INFO:_master_model_container: 18
2023-03-22 18:26:27,229:INFO:_display_container: 5
2023-03-22 18:26:27,229:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.4, loss='log_loss', max_depth=4,
                           max_features='log2', max_leaf_nodes=None,
                           min_impurity_decrease=0, min_samples_leaf=2,
                           min_samples_split=5, min_weight_fraction_leaf=0.0,
                           n_estimators=110, n_iter_no_change=None,
                           random_state=42, subsample=0.8, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-03-22 18:26:27,229:INFO:create_model() successfully completed......................................
2023-03-22 18:26:27,390:INFO:SubProcess create_model() end ==================================
2023-03-22 18:26:27,390:INFO:choose_better activated
2023-03-22 18:26:27,392:INFO:SubProcess create_model() called ==================================
2023-03-22 18:26:27,394:INFO:Initializing create_model()
2023-03-22 18:26:27,394:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028C79C80760>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-03-22 18:26:27,394:INFO:Checking exceptions
2023-03-22 18:26:27,396:INFO:Importing libraries
2023-03-22 18:26:27,396:INFO:Copying training dataset
2023-03-22 18:26:27,398:INFO:Defining folds
2023-03-22 18:26:27,398:INFO:Declaring metric variables
2023-03-22 18:26:27,398:INFO:Importing untrained model
2023-03-22 18:26:27,398:INFO:Declaring custom model
2023-03-22 18:26:27,399:INFO:Gradient Boosting Classifier Imported successfully
2023-03-22 18:26:27,399:INFO:Starting cross validation
2023-03-22 18:26:27,400:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-03-22 18:26:27,862:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:26:27,864:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:26:27,866:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:26:27,870:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:26:27,872:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:26:27,876:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:26:27,876:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:26:27,878:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:26:27,878:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:26:27,880:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:26:27,880:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:26:27,882:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:26:27,894:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:26:27,896:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:26:27,898:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:26:27,914:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:26:27,916:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:26:27,916:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:26:27,956:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:26:27,958:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:26:27,960:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:26:28,010:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:26:28,012:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:26:28,014:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:26:28,024:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:26:28,026:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:26:28,030:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:26:28,090:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:26:28,092:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:26:28,094:WARNING:C:\Users\dolin\miniconda3\envs\pc3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Gentoo') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-03-22 18:26:29,301:INFO:Calculating mean and std
2023-03-22 18:26:29,303:INFO:Creating metrics dataframe
2023-03-22 18:26:29,303:INFO:Finalizing model
2023-03-22 18:26:29,559:INFO:Uploading results into container
2023-03-22 18:26:29,559:INFO:Uploading model into container now
2023-03-22 18:26:29,561:INFO:_master_model_container: 19
2023-03-22 18:26:29,561:INFO:_display_container: 6
2023-03-22 18:26:29,561:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-03-22 18:26:29,561:INFO:create_model() successfully completed......................................
2023-03-22 18:26:29,717:INFO:SubProcess create_model() end ==================================
2023-03-22 18:26:29,717:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False) result for Accuracy is 0.9864
2023-03-22 18:26:29,717:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.4, loss='log_loss', max_depth=4,
                           max_features='log2', max_leaf_nodes=None,
                           min_impurity_decrease=0, min_samples_leaf=2,
                           min_samples_split=5, min_weight_fraction_leaf=0.0,
                           n_estimators=110, n_iter_no_change=None,
                           random_state=42, subsample=0.8, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False) result for Accuracy is 0.9909
2023-03-22 18:26:29,719:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.4, loss='log_loss', max_depth=4,
                           max_features='log2', max_leaf_nodes=None,
                           min_impurity_decrease=0, min_samples_leaf=2,
                           min_samples_split=5, min_weight_fraction_leaf=0.0,
                           n_estimators=110, n_iter_no_change=None,
                           random_state=42, subsample=0.8, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False) is best model
2023-03-22 18:26:29,719:INFO:choose_better completed
2023-03-22 18:26:29,725:INFO:_master_model_container: 19
2023-03-22 18:26:29,727:INFO:_display_container: 5
2023-03-22 18:26:29,727:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.4, loss='log_loss', max_depth=4,
                           max_features='log2', max_leaf_nodes=None,
                           min_impurity_decrease=0, min_samples_leaf=2,
                           min_samples_split=5, min_weight_fraction_leaf=0.0,
                           n_estimators=110, n_iter_no_change=None,
                           random_state=42, subsample=0.8, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-03-22 18:26:29,727:INFO:tune_model() successfully completed......................................
2023-03-22 18:26:32,790:INFO:Initializing predict_model()
2023-03-22 18:26:32,790:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028C79C80760>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.4, loss='log_loss', max_depth=4,
                           max_features='log2', max_leaf_nodes=None,
                           min_impurity_decrease=0, min_samples_leaf=2,
                           min_samples_split=5, min_weight_fraction_leaf=0.0,
                           n_estimators=110, n_iter_no_change=None,
                           random_state=42, subsample=0.8, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000028C3BCD1F30>)
2023-03-22 18:26:32,790:INFO:Checking exceptions
2023-03-22 18:26:32,790:INFO:Preloading libraries
2023-03-22 18:26:33,891:INFO:Initializing save_model()
2023-03-22 18:26:33,892:INFO:save_model(model=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.4, loss='log_loss', max_depth=4,
                           max_features='log2', max_leaf_nodes=None,
                           min_impurity_decrease=0, min_samples_leaf=2,
                           min_samples_split=5, min_weight_fraction_leaf=0.0,
                           n_estimators=110, n_iter_no_change=None,
                           random_state=42, subsample=0.8, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), model_name=./models/penguins_species_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\dolin\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['bill_length_mm', 'bill_depth_mm',
                                             'flipper_length_mm',
                                             'body_mass_g'],
                                    transformer=SimpleImputer(add_in...
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': Female    0
Male      1
NaN      -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None, include=['island'],
                                    transformer=OneHotEncoder(cols=['island'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={'cache_size': None})
2023-03-22 18:26:33,892:INFO:Adding model into prep_pipe
2023-03-22 18:27:00,864:INFO:Initializing save_model()
2023-03-22 18:27:00,864:INFO:save_model(model=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.4, loss='log_loss', max_depth=4,
                           max_features='log2', max_leaf_nodes=None,
                           min_impurity_decrease=0, min_samples_leaf=2,
                           min_samples_split=5, min_weight_fraction_leaf=0.0,
                           n_estimators=110, n_iter_no_change=None,
                           random_state=42, subsample=0.8, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), model_name=../models/penguins_species_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\dolin\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['bill_length_mm', 'bill_depth_mm',
                                             'flipper_length_mm',
                                             'body_mass_g'],
                                    transformer=SimpleImputer(add_in...
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': Female    0
Male      1
NaN      -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None, include=['island'],
                                    transformer=OneHotEncoder(cols=['island'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={'cache_size': None})
2023-03-22 18:27:00,864:INFO:Adding model into prep_pipe
2023-03-22 18:27:00,881:INFO:../models/penguins_species_model.pkl saved in current working directory
2023-03-22 18:27:00,897:INFO:Pipeline(memory=FastMemory(location=C:\Users\dolin\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['bill_length_mm', 'bill_depth_mm',
                                             'flipper_length_mm',
                                             'body_mass_g'],
                                    transformer=SimpleImputer(add_in...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.4, loss='log_loss',
                                            max_depth=4, max_features='log2',
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0,
                                            min_samples_leaf=2,
                                            min_samples_split=5,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=110,
                                            n_iter_no_change=None,
                                            random_state=42, subsample=0.8,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2023-03-22 18:27:00,899:INFO:save_model() successfully completed......................................
